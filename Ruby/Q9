Question: Create a method for Array that returns a hash having 'key' as length of the element and value as an array of all the elements of that length. Make use of Array#each.
Returned Hash should be sorted by key.

Your program should accept command line arguments. 
Input argument: array-hash.rb "['abc','def',1234,234,'abcd','x','mnop',5,'zZzZ']"
output: {1=>["x", "5"], 3=>["abc", "def", "234"], 4=>["1234", "abcd", "mnop", "zZzZ"]}

MyBin tests:

[name]
1
[/name]
[input]
[/input]
[output]
Please provide an input 
[/output]

===

[name]
2
[/name]
[input]
"['abc','def',1234,234,'abcd','x','mnop',5,'zZzZ']"
[/input]
[output]
{1=>["x", "5"], 3=>["abc", "def", "234"], 4=>["1234", "abcd", "mnop", "zZzZ"]} 
[/output]

===

[name]
3
[/name]
[input]
"['hello','world',1,2,3,'good','bye']"
[/input]
[output]
{1=>["1", "2", "3"], 3=>["bye"], 4=>["good"], 5=>["hello", "world"]} 
[/output]

Solution:

# Your Ruby code here
class Array
  def group_by_length
    hash_array = Hash.new { |hash, key| hash[key] = [] }
    each do |number|
      length = number.length
      hash_array[length].push(number)
    end
    hash_array.sort.to_h
  end
end
if ARGV[0].nil?
  puts 'Please provide an input'
else
  input_string = ARGV[0]
  new_string = input_string.delete "''"
  array = new_string[1...-1].split(',')
  puts array.group_by_length
end